(this["webpackJsonpcrazy-pharmacist-react"]=this["webpackJsonpcrazy-pharmacist-react"]||[]).push([[0],{28:function(e,t,n){},29:function(e,t,n){},50:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n(1),c=n.n(a),s=n(19),o=n.n(s),i=(n(28),n(5));function h(e){var t=e.drug;return Object(r.jsxs)("div",{class:"Drug",children:[Object(r.jsx)("h3",{class:"DrugTitle",children:t.drugName}),Object(r.jsx)("p",{class:"DrugDesc",children:t.drugDesc})]})}n(29);var u=n(20);function l(e){var t=e.drugs;return Object(r.jsx)("div",{class:"DrugList",children:t.map((function(e){return Object(r.jsx)(h,{drug:e},Object(u.v4)())}))})}var d=n(7),j=n.n(d),b=n(21),p=n(22),f=n.n(p),g="https://cors-anywhere.herokuapp.com/mhouol6jn7.execute-api.us-east-1.amazonaws.com/prod";function m(){return x.apply(this,arguments)}function x(){return(x=Object(b.a)(j.a.mark((function e(){var t,n,r,a;return j.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=null,e.prev=1,e.next=4,f.a.get(g);case 4:n=e.sent,t=n.data,e.next=12;break;case 8:e.prev=8,e.t0=e.catch(1),console.error(e.t0),console.log("Could not fetch from API.");case 12:for(a in r=[],t)r.push({drugName:a,drugDesc:t[a]});return e.abrupt("return",r);case 15:case"end":return e.stop()}}),e,null,[[1,8]])})))).apply(this,arguments)}var O=n(52);var v=function(){var e=Object(a.useState)(0),t=Object(i.a)(e,2),n=t[0],c=t[1],s=Object(a.useState)([]),o=Object(i.a)(s,2),h=o[0],u=o[1],d=Object(a.useState)([]),j=Object(i.a)(d,2),b=j[0],p=j[1];return Object(a.useEffect)((function(){m().then((function(e){p(e),c(1)})).catch((function(e){console.error(e)}))}),[]),Object(a.useEffect)((function(){if(0!==n){var e=6*(n-1),t=6*n;u(b.slice(e,t))}}),[n]),Object(r.jsxs)("div",{class:"mainDiv",children:[Object(r.jsx)("h1",{children:"Crazy Pharmacist"}),Object(r.jsx)("p",{children:"Have you ever wondered where the names of perscription drugs come from? It seems like they are pulled straight out of someones... head. This is a generator that creates the names of fictional pharmaceuticals and their uses. Any resemblance to a real drug is coincidental."}),h.length>0&&Object(r.jsx)(l,{drugs:h}),Object(r.jsx)(O.a,{variant:"primary",onClick:function(){!function(){switch(n){case 2:m().then((function(e){p(e)})).catch((function(e){console.error(e)})),c(n+1);break;case 3:c(1);break;default:c(n+1)}}()},children:"Show More"}),Object(r.jsxs)("div",{class:"HowItWorks",children:[Object(r.jsx)("h2",{children:"How it works"}),Object(r.jsx)("p",{children:"This type of generator is known as a Markov Model. There are two of them in this project: one for the names and one for the descriptions. For each 'state' (letter or word in a name or description) that the model encounters when training, it record the state, along with the transition to the next state. When done, it stores all states, all transitions and the probabilities of observing them."}),Object(r.jsxs)("p",{children:["When generating, the model transitions to the next state by picking the next state randomly, using the probabilities that were collected when training. This is done until encountering a termination state ('.'). Generated sequences are rejected if they are too long, too short or don't sound right. Generator source code (in Python and JavaScript!) along with the extracted data is available on ",Object(r.jsx)("a",{href:"https://github.com/alexkalinins/crazy-pharmacist-generator",children:"GitHub"}),"."]}),Object(r.jsx)("h2",{children:"Data Source"}),Object(r.jsx)("p",{children:"Drug brand names were collected from the National Drug Code (NDC) database. Use descriptions were collected from Wikipedia."}),Object(r.jsx)("p",{children:"If you use this program to name a perscription drug, let me know :) "}),Object(r.jsx)("footer",{children:"Copyright 2020 by Alex Kalinins. All Rights Reserved."})]})]})},w=function(e){e&&e instanceof Function&&n.e(3).then(n.bind(null,53)).then((function(t){var n=t.getCLS,r=t.getFID,a=t.getFCP,c=t.getLCP,s=t.getTTFB;n(e),r(e),a(e),c(e),s(e)}))};o.a.render(Object(r.jsx)(c.a.StrictMode,{children:Object(r.jsx)(v,{})}),document.getElementById("root")),w()}},[[50,1,2]]]);
//# sourceMappingURL=main.db1a61e1.chunk.js.map